{
	"info": {
		"_postman_id": "418909a8-7564-4e57-841f-7d9c69b5d961",
		"name": "movie-stack",
		"description": "Movie/Serie List Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "actors",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Actor Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"officia \",\n    \"birthdate\": \"1980-11-08T09:49:32.624Z\",\n    \"gender\": \"Lorem cillum Ut\",\n    \"id\": 28227346.42048435\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"officia \",\n    \"birthdate\": \"1980-11-08T09:49:32.624Z\",\n    \"gender\": \"Lorem cillum Ut\",\n    \"id\": 28227346.42048435\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Actor Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Actor Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Actor model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/actors/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ut id\",\n \"birthdate\": \"1984-10-03T21:35:12.418Z\",\n \"gender\": \"in esse incididunt\",\n \"id\": -90113499.20176244,\n \"movies\": [\n  {\n   \"name\": \"sit consequat ullamco\",\n   \"release_date\": \"1944-02-07T19:48:21.550Z\",\n   \"rating\": 9194320.774367526,\n   \"genre\": \"sint velit irure cillum\",\n   \"id\": 61735572.72188336,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"irure enim\",\n     \"description\": \"qui nostrud ex dolore cillum\",\n     \"creation_date\": \"1966-02-12T16:26:07.870Z\",\n     \"id\": 96144999.44030756,\n     \"userId\": 17920526.762051165,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"anim aute\",\n     \"description\": \"voluptate est sed in\",\n     \"creation_date\": \"1942-05-11T01:31:31.915Z\",\n     \"id\": -87109870.90325011,\n     \"userId\": 82489849.97092128,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"sit officia ipsum ex\",\n   \"release_date\": \"2005-03-17T06:46:24.039Z\",\n   \"rating\": -99611919.84690374,\n   \"genre\": \"ullamco fugiat\",\n   \"id\": -32075400.046813443,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"sint \",\n     \"description\": \"ea labori\",\n     \"creation_date\": \"1967-10-17T00:11:45.162Z\",\n     \"id\": 91575713.37293199,\n     \"userId\": 31437782.02677247,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"Du\",\n     \"description\": \"incididunt in ut consectetur\",\n     \"creation_date\": \"1982-01-22T00:59:28.205Z\",\n     \"id\": 25619946.106730834,\n     \"userId\": -25936884.627739996,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n ],\n \"series\": [\n  {\n   \"name\": \"dolore ea eu laboris\",\n   \"release_date\": \"1996-03-28T05:54:36.039Z\",\n   \"rating\": -77182658.07252425,\n   \"genre\": \"mollit\",\n   \"seasons\": 31996042.4081807,\n   \"id\": -62538763.133565076,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"amet velit\",\n     \"description\": \"culpa aliquip ex cillum\",\n     \"creation_date\": \"1974-04-12T17:07:07.803Z\",\n     \"id\": 82366391.26587519,\n     \"userId\": 77712917.20906878,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"occaecat u\",\n     \"description\": \"iru\",\n     \"creation_date\": \"2001-09-18T15:37:59.135Z\",\n     \"id\": -79447664.46676445,\n     \"userId\": 15701850.845603004,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"cillum ea in\",\n   \"release_date\": \"1991-07-28T12:59:06.221Z\",\n   \"rating\": 67938420.83100417,\n   \"genre\": \"aute proident\",\n   \"seasons\": 68540949.83616236,\n   \"id\": 77433273.96857548,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"tempor voluptate Ut\",\n     \"description\": \"veniam deserunt\",\n     \"creation_date\": \"1960-03-05T02:22:44.159Z\",\n     \"id\": -54575874.0923834,\n     \"userId\": -30143035.84162064,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"laboris eu labore\",\n     \"description\": \"in\",\n     \"creation_date\": \"1982-10-20T08:32:01.801Z\",\n     \"id\": -17234003.523162127,\n     \"userId\": -36488176.430933274,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Actor Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Actor Movie Controller.find",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors/:id/movies?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id",
										"movies"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Array of Actor has many Movie through MovieActor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/actors/:id/movies?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id",
												"movies"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"est magna et id\",\n  \"release_date\": \"2015-03-18T11:44:09.230Z\",\n  \"rating\": -35035906.545840636,\n  \"genre\": \"ipsum\",\n  \"id\": 47799445.07958162\n },\n {\n  \"name\": \"exercitation\",\n  \"release_date\": \"1994-03-09T15:59:34.636Z\",\n  \"rating\": -99522292.36289218,\n  \"genre\": \"ullamco deserunt in esse sunt\",\n  \"id\": 1817707.6218019575\n }\n]"
								}
							]
						},
						{
							"name": "Actor Serie Controller.find",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors/:id/series?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										":id",
										"series"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Array of Actor has many Serie through SerieActor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/actors/:id/series?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actors",
												":id",
												"series"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"amet occaecat\",\n  \"release_date\": \"1942-06-19T10:21:11.615Z\",\n  \"rating\": 19950254.22394465,\n  \"genre\": \"ut labore laboris\",\n  \"seasons\": -87269946.01298279,\n  \"id\": 25332452.016018167\n },\n {\n  \"name\": \"qui nisi cillum\",\n  \"release_date\": \"2019-03-25T01:23:36.603Z\",\n  \"rating\": -28817453.70848891,\n  \"genre\": \"laboris\",\n  \"seasons\": -60772478.27834249,\n  \"id\": 36983969.01279056\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Actor Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"quis aute tempor eiusmod anim\",\n    \"birthdate\": \"1945-05-11T02:42:00.124Z\",\n    \"gender\": \"non\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": [
						{
							"name": "Actor model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"quis aute tempor eiusmod anim\",\n    \"birthdate\": \"1945-05-11T02:42:00.124Z\",\n    \"gender\": \"non\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/actors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"officia \",\n \"birthdate\": \"1980-11-08T09:49:32.624Z\",\n \"gender\": \"Lorem cillum Ut\",\n \"id\": 28227346.42048435\n}"
						}
					]
				},
				{
					"name": "Actor Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/actors?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Actor PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/actors?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Actor Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of Actor model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"in laboris\",\n  \"birthdate\": \"1991-02-12T12:36:06.485Z\",\n  \"gender\": \"dolor aliqua exercitation nulla esse\",\n  \"id\": -96311801.39178519,\n  \"movies\": [\n   {\n    \"name\": \"nulla cillum aute Ut dolor\",\n    \"release_date\": \"2003-07-18T22:03:35.765Z\",\n    \"rating\": -39320631.30854413,\n    \"genre\": \"commodo Du\",\n    \"id\": -441006.46218664944,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"proident et\",\n      \"description\": \"ullamco ipsum incididunt\",\n      \"creation_date\": \"1952-02-14T09:25:44.900Z\",\n      \"id\": -33740922.671738714,\n      \"userId\": 1409268.9938240498,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"id ad quis culpa tempor\",\n      \"description\": \"irure in in\",\n      \"creation_date\": \"2020-01-05T11:03:30.868Z\",\n      \"id\": -857371.6111961454,\n      \"userId\": -34029220.76883486,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"name\": \"sit\",\n    \"release_date\": \"1966-10-11T10:54:09.770Z\",\n    \"rating\": 25515221.429359242,\n    \"genre\": \"adipisicing Duis\",\n    \"id\": -52894451.874522954,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"dolore laborum mollit\",\n      \"description\": \"aliquip amet sint\",\n      \"creation_date\": \"1956-04-28T17:08:17.409Z\",\n      \"id\": -60004361.13686965,\n      \"userId\": 55034161.47003409,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"Duis incididunt deserunt \",\n      \"description\": \"pariatur\",\n      \"creation_date\": \"1984-08-27T06:04:03.415Z\",\n      \"id\": 43822305.612499654,\n      \"userId\": -84922088.19526704,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ],\n  \"series\": [\n   {\n    \"name\": \"in velit Excepteur\",\n    \"release_date\": \"1998-01-11T06:03:06.512Z\",\n    \"rating\": -91249022.43577506,\n    \"genre\": \"consectetur officia ad\",\n    \"seasons\": 21221468.19393897,\n    \"id\": 58352410.646585464,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"nisi proident\",\n      \"description\": \"fugiat commodo eiusmod consequat\",\n      \"creation_date\": \"1997-10-06T01:09:42.113Z\",\n      \"id\": -91614592.72394042,\n      \"userId\": -60743996.99400952,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"enim sunt laborum\",\n      \"description\": \"mollit commodo irure\",\n      \"creation_date\": \"1977-04-11T23:32:59.176Z\",\n      \"id\": 65266621.15960109,\n      \"userId\": -90011166.91714945,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"name\": \"sint consectetur \",\n    \"release_date\": \"1961-10-26T05:22:19.727Z\",\n    \"rating\": 84289326.68095815,\n    \"genre\": \"ipsum magna\",\n    \"seasons\": -57607087.91792424,\n    \"id\": 4224675.472871199,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"est sunt nisi\",\n      \"description\": \"eu dolore minim incididunt labore\",\n      \"creation_date\": \"1963-04-23T05:21:11.659Z\",\n      \"id\": -94171559.77508646,\n      \"userId\": 75034059.86401725,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"est\",\n      \"description\": \"dolor eiusmod laboris cillum adipisicing\",\n      \"creation_date\": \"1961-05-18T06:12:17.733Z\",\n      \"id\": -19750475.244359,\n      \"userId\": 98064366.47027689,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ]\n },\n {\n  \"name\": \"ut Ut ullamco magna\",\n  \"birthdate\": \"1982-10-22T22:34:10.098Z\",\n  \"gender\": \"dolore veniam dolor reprehenderit aliquip\",\n  \"id\": 84642895.19226626,\n  \"movies\": [\n   {\n    \"name\": \"laboris exercitation\",\n    \"release_date\": \"1966-12-30T18:26:29.775Z\",\n    \"rating\": 65417010.90555021,\n    \"genre\": \"reprehenderit et non\",\n    \"id\": 1938391.8666835874,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"occaecat consequat esse Excepteur cillum\",\n      \"description\": \"dolor laboris deserunt reprehenderit\",\n      \"creation_date\": \"1945-08-13T08:38:17.051Z\",\n      \"id\": -55259245.1906218,\n      \"userId\": 12791961.852420777,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"magna est commodo incididunt\",\n      \"description\": \"mollit\",\n      \"creation_date\": \"1991-11-08T16:22:59.848Z\",\n      \"id\": -87452087.86610115,\n      \"userId\": 91879604.90736198,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"name\": \"et cillum ipsum sit\",\n    \"release_date\": \"2015-05-10T09:44:13.275Z\",\n    \"rating\": -49067047.96322825,\n    \"genre\": \"consectetur sint anim culpa ad\",\n    \"id\": -51291659.96573044,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"occae\",\n      \"description\": \"qui sit\",\n      \"creation_date\": \"1997-10-01T00:43:07.871Z\",\n      \"id\": -18254756.199077398,\n      \"userId\": 54571595.57334101,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"commodo mollit quis\",\n      \"description\": \"ipsum culpa ex adipisicing\",\n      \"creation_date\": \"1998-05-15T12:51:37.565Z\",\n      \"id\": -21532346.59914802,\n      \"userId\": 83353668.42870659,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ],\n  \"series\": [\n   {\n    \"name\": \"cillum non\",\n    \"release_date\": \"1957-05-04T04:43:44.418Z\",\n    \"rating\": -13856539.50674279,\n    \"genre\": \"incididunt consectetur minim nostrud elit\",\n    \"seasons\": 20039819.980070025,\n    \"id\": 61877427.93032411,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"amet dolor anim\",\n      \"description\": \"ex nisi\",\n      \"creation_date\": \"1965-05-19T21:01:20.205Z\",\n      \"id\": -42568124.29204153,\n      \"userId\": 33049737.20217821,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"sint qui\",\n      \"description\": \"ut minim laborum\",\n      \"creation_date\": \"1997-07-06T10:02:54.868Z\",\n      \"id\": -43131359.822882675,\n      \"userId\": -2045283.8861534595,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   },\n   {\n    \"name\": \"laborum aliquip magna proident\",\n    \"release_date\": \"1974-11-30T04:01:45.708Z\",\n    \"rating\": -96806253.65480307,\n    \"genre\": \"est cupidatat\",\n    \"seasons\": -73549240.08309585,\n    \"id\": 98036956.06284481,\n    \"actors\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n     }\n    ],\n    \"lists\": [\n     {\n      \"name\": \"ad magna\",\n      \"description\": \"est cillum eiusmod amet pariatur\",\n      \"creation_date\": \"1985-08-25T04:47:57.624Z\",\n      \"id\": -24386766.910911024,\n      \"userId\": 48636645.46443573,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     },\n     {\n      \"name\": \"eiusmod ullamco in\",\n      \"description\": \"et\",\n      \"creation_date\": \"1973-05-09T06:14:33.403Z\",\n      \"id\": -32930212.926106647,\n      \"userId\": 89049501.5170126,\n      \"movies\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"series\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Actor Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Actor model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/actors/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actors",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "list-movies",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Listmovie Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -30685230.031359673,\n    \"listId\": -83113922.33626908,\n    \"movieId\": 63445838.31654829\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -30685230.031359673,\n    \"listId\": -83113922.33626908,\n    \"movieId\": 63445838.31654829\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/list-movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Listmovie Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -55277016.841735005,\n    \"listId\": 21192924.893992066,\n    \"movieId\": -37172946.536645316\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -55277016.841735005,\n    \"listId\": 21192924.893992066,\n    \"movieId\": -37172946.536645316\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/list-movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Listmovie Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-movies/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "ListMovie model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list-movies/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-movies",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -63032129.366765946,\n \"listId\": -20538017.768936306,\n \"movieId\": -77740984.24261972\n}"
								}
							]
						},
						{
							"name": "Listmovie Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list-movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Listmovie Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"listId\": -47497082.48055997,\n    \"movieId\": -93661518.96574637\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/list-movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-movies"
							]
						}
					},
					"response": [
						{
							"name": "ListMovie model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"listId\": -47497082.48055997,\n    \"movieId\": -93661518.96574637\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-movies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -30685230.031359673,\n \"listId\": -83113922.33626908,\n \"movieId\": 63445838.31654829\n}"
						}
					]
				},
				{
					"name": "Listmovie Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -55277016.841735005,\n    \"listId\": 21192924.893992066,\n    \"movieId\": -37172946.536645316\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/list-movies?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-movies"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "ListMovie PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -55277016.841735005,\n    \"listId\": 21192924.893992066,\n    \"movieId\": -37172946.536645316\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-movies?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Listmovie Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/list-movies?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-movies"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of ListMovie model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-movies?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 98277388.64237404,\n  \"listId\": 15098206.4204503,\n  \"movieId\": 56584557.26321003\n },\n {\n  \"id\": -91602740.26850975,\n  \"listId\": -85398080.34601073,\n  \"movieId\": -25088343.762631744\n }\n]"
						}
					]
				},
				{
					"name": "Listmovie Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/list-movies/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-movies",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "ListMovie model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-movies/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-movies",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "list-series",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Listserie Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 95004612.96256325,\n    \"listId\": -51007774.02654919,\n    \"serieId\": 49519238.442503214\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 95004612.96256325,\n    \"listId\": -51007774.02654919,\n    \"serieId\": 49519238.442503214\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/list-series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Listserie Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 56919173.47521067,\n    \"listId\": 56114349.19588798,\n    \"serieId\": -68229951.9837906\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 56919173.47521067,\n    \"listId\": 56114349.19588798,\n    \"serieId\": -68229951.9837906\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/list-series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Listserie Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-series/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "ListSerie model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list-series/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-series",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -50137328.38040408,\n \"listId\": -40401107.24757895,\n \"serieId\": -36095533.79077277\n}"
								}
							]
						},
						{
							"name": "Listserie Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list-series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list-series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Listserie Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"listId\": -27235212.92200002,\n    \"serieId\": 39972642.35564914\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/list-series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-series"
							]
						}
					},
					"response": [
						{
							"name": "ListSerie model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"listId\": -27235212.92200002,\n    \"serieId\": 39972642.35564914\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 95004612.96256325,\n \"listId\": -51007774.02654919,\n \"serieId\": 49519238.442503214\n}"
						}
					]
				},
				{
					"name": "Listserie Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 56919173.47521067,\n    \"listId\": 56114349.19588798,\n    \"serieId\": -68229951.9837906\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/list-series?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-series"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "ListSerie PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 56919173.47521067,\n    \"listId\": 56114349.19588798,\n    \"serieId\": -68229951.9837906\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/list-series?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Listserie Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/list-series?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-series"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of ListSerie model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-series?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 67351220.70109728,\n  \"listId\": -24186261.19107592,\n  \"serieId\": 16202247.003115967\n },\n {\n  \"id\": 21182948.817761943,\n  \"listId\": 47018913.746386826,\n  \"serieId\": 23160874.734382376\n }\n]"
						}
					]
				},
				{
					"name": "Listserie Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/list-series/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list-series",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "ListSerie model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list-series/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list-series",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "lists",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "movies",
							"item": [
								{
									"name": "List Movie Controller.create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"dolor occaecat nulla ut irure\",\n    \"release_date\": \"1963-02-13T04:55:43.404Z\",\n    \"rating\": 14322333.65331541,\n    \"genre\": \"cillum nulla\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id/movies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"movies"
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "create a Movie model instance",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dolor occaecat nulla ut irure\",\n    \"release_date\": \"1963-02-13T04:55:43.404Z\",\n    \"rating\": 14322333.65331541,\n    \"genre\": \"cillum nulla\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/lists/:id/movies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"movies"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"irure voluptate dolor\",\n \"release_date\": \"1991-08-10T23:42:13.524Z\",\n \"rating\": -31992160.867454126,\n \"genre\": \"ex proident veniam incididunt\",\n \"id\": -79712153.28449705\n}"
										}
									]
								},
								{
									"name": "List Movie Controller.patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id/movies?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"movies"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "List.Movie PATCH success count",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/lists/:id/movies?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"movies"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								},
								{
									"name": "List Movie Controller.find",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id/movies?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"movies"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Array of List has many Movie through ListMovie",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/lists/:id/movies?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"movies"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"est magna et id\",\n  \"release_date\": \"2015-03-18T11:44:09.230Z\",\n  \"rating\": -35035906.545840636,\n  \"genre\": \"ipsum\",\n  \"id\": 47799445.07958162\n },\n {\n  \"name\": \"exercitation\",\n  \"release_date\": \"1994-03-09T15:59:34.636Z\",\n  \"rating\": -99522292.36289218,\n  \"genre\": \"ullamco deserunt in esse sunt\",\n  \"id\": 1817707.6218019575\n }\n]"
										}
									]
								},
								{
									"name": "List Movie Controller.delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id/movies?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"movies"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "List.Movie DELETE success count",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/lists/:id/movies?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"movies"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								}
							]
						},
						{
							"name": "series",
							"item": [
								{
									"name": "List Serie Controller.create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"consequat quis enim\",\n    \"release_date\": \"1955-11-21T11:06:15.860Z\",\n    \"rating\": -54634732.94897656,\n    \"genre\": \"sint\",\n    \"seasons\": -38917025.43370576\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id/series",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"series"
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "create a Serie model instance",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"consequat quis enim\",\n    \"release_date\": \"1955-11-21T11:06:15.860Z\",\n    \"rating\": -54634732.94897656,\n    \"genre\": \"sint\",\n    \"seasons\": -38917025.43370576\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/lists/:id/series",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"series"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"qui consequat\",\n \"release_date\": \"1973-05-21T09:43:21.321Z\",\n \"rating\": -26984993.09491518,\n \"genre\": \"eu commodo pariatur v\",\n \"seasons\": -51470973.28240604,\n \"id\": 69273116.26098031\n}"
										}
									]
								},
								{
									"name": "List Serie Controller.patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id/series?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"series"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "List.Serie PATCH success count",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/lists/:id/series?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"series"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								},
								{
									"name": "List Serie Controller.find",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id/series?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"series"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Array of List has many Serie through ListSerie",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/lists/:id/series?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"series"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"amet occaecat\",\n  \"release_date\": \"1942-06-19T10:21:11.615Z\",\n  \"rating\": 19950254.22394465,\n  \"genre\": \"ut labore laboris\",\n  \"seasons\": -87269946.01298279,\n  \"id\": 25332452.016018167\n },\n {\n  \"name\": \"qui nisi cillum\",\n  \"release_date\": \"2019-03-25T01:23:36.603Z\",\n  \"rating\": -28817453.70848891,\n  \"genre\": \"laboris\",\n  \"seasons\": -60772478.27834249,\n  \"id\": 36983969.01279056\n }\n]"
										}
									]
								},
								{
									"name": "List Serie Controller.delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id/series?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id",
												"series"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "List.Serie DELETE success count",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/lists/:id/series?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lists",
														":id",
														"series"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"cupidatat pariatur\",\n    \"description\": \"eu\",\n    \"creation_date\": \"1950-10-19T10:00:54.755Z\",\n    \"id\": -72781449.45384897,\n    \"userId\": -38758558.62214981\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"cupidatat pariatur\",\n    \"description\": \"eu\",\n    \"creation_date\": \"1950-10-19T10:00:54.755Z\",\n    \"id\": -72781449.45384897,\n    \"userId\": -38758558.62214981\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "List Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/lists/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "List Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lists/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "List model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"amet deserunt esse enim\",\n \"description\": \"qui incididunt\",\n \"creation_date\": \"1948-07-10T04:31:42.226Z\",\n \"id\": -66961762.08827387,\n \"userId\": -79534261.7671463,\n \"movies\": [\n  {\n   \"name\": \"ut sint Excepteur mollit\",\n   \"release_date\": \"1973-11-22T22:37:26.320Z\",\n   \"rating\": 17965773.145282343,\n   \"genre\": \"dolor voluptate eiusmod et\",\n   \"id\": -25315823.072698593,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"dolor irure\",\n     \"description\": \"minim laboris eu mollit\",\n     \"creation_date\": \"1971-03-17T17:00:59.422Z\",\n     \"id\": -16465533.281397969,\n     \"userId\": 49802583.139523774,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"Ut in eiusmod cupidatat\",\n     \"description\": \"do non eu enim nisi\",\n     \"creation_date\": \"2011-08-12T03:48:21.984Z\",\n     \"id\": -73573319.07969505,\n     \"userId\": -52942036.56423116,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"velit \",\n   \"release_date\": \"2006-08-23T14:30:48.017Z\",\n   \"rating\": -15775403.10809113,\n   \"genre\": \"deserunt laborum voluptate qui\",\n   \"id\": 43326589.58021313,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"sint\",\n     \"description\": \"culpa non ut consecte\",\n     \"creation_date\": \"2019-12-02T16:53:19.055Z\",\n     \"id\": -92934428.88003126,\n     \"userId\": 58427667.995447904,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"non exercitation\",\n     \"description\": \"magna\",\n     \"creation_date\": \"1945-11-04T23:39:15.191Z\",\n     \"id\": 79320137.20108998,\n     \"userId\": -73606791.62620553,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n ],\n \"series\": [\n  {\n   \"name\": \"non est\",\n   \"release_date\": \"2017-06-03T00:56:43.812Z\",\n   \"rating\": 45423812.226931304,\n   \"genre\": \"ut cupidatat\",\n   \"seasons\": -83478957.26653212,\n   \"id\": -25324861.396048263,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"voluptate officia sint\",\n     \"description\": \"sint dolore\",\n     \"creation_date\": \"2005-04-02T19:08:02.790Z\",\n     \"id\": -53328818.78150348,\n     \"userId\": -25620361.101955906,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"ad\",\n     \"description\": \"exercit\",\n     \"creation_date\": \"2006-03-08T18:24:16.902Z\",\n     \"id\": -77076060.91479726,\n     \"userId\": 72144419.9103992,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"qui veniam pariatur\",\n   \"release_date\": \"1994-05-09T19:15:41.443Z\",\n   \"rating\": 45489499.30420157,\n   \"genre\": \"culpa qui voluptate veniam\",\n   \"seasons\": 59343529.28513965,\n   \"id\": 42301111.43850258,\n   \"actors\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n    }\n   ],\n   \"lists\": [\n    {\n     \"name\": \"Lorem Excepteur nostrud Ut\",\n     \"description\": \"culpa\",\n     \"creation_date\": \"1958-04-17T19:34:32.220Z\",\n     \"id\": 73585273.11657119,\n     \"userId\": -86961821.45986171,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"name\": \"dolor consequat amet\",\n     \"description\": \"ut dolore\",\n     \"creation_date\": \"1963-01-08T07:14:40.491Z\",\n     \"id\": 18926380.510974944,\n     \"userId\": -48519373.69654013,\n     \"movies\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"series\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "List Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/lists/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"lists",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "List Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"incid\",\n    \"description\": \"do occaecat aute dolore nulla\",\n    \"creation_date\": \"1986-03-19T11:28:50.858Z\",\n    \"userId\": 49308187.310515106\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/lists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"lists"
							]
						}
					},
					"response": [
						{
							"name": "List model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"incid\",\n    \"description\": \"do occaecat aute dolore nulla\",\n    \"creation_date\": \"1986-03-19T11:28:50.858Z\",\n    \"userId\": 49308187.310515106\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"cupidatat pariatur\",\n \"description\": \"eu\",\n \"creation_date\": \"1950-10-19T10:00:54.755Z\",\n \"id\": -72781449.45384897,\n \"userId\": -38758558.62214981\n}"
						}
					]
				},
				{
					"name": "List Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/lists?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "List PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/lists?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "List Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/lists?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of List model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lists?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"aliqua Duis velit nisi minim\",\n  \"description\": \"aliquip officia fugiat cillum\",\n  \"creation_date\": \"2021-03-30T10:08:30.605Z\",\n  \"id\": -88605993.36212291,\n  \"userId\": 76412843.50516003,\n  \"movies\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"series\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n },\n {\n  \"name\": \"id non ullamco\",\n  \"description\": \"dolore veniam dolor magna\",\n  \"creation_date\": \"1961-02-04T15:28:01.340Z\",\n  \"id\": -72757675.05034727,\n  \"userId\": -89373534.63573313,\n  \"movies\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"series\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "List Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/lists/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"lists",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "List model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lists/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lists",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "movie-actors",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Movieactor Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -63947463.24316704,\n    \"movieId\": -61981571.33545714,\n    \"actorId\": -51438926.427681245\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -63947463.24316704,\n    \"movieId\": -61981571.33545714,\n    \"actorId\": -51438926.427681245\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Movieactor Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70294398.2718263,\n    \"movieId\": -48660535.1030005,\n    \"actorId\": 8563662.725198507\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 70294398.2718263,\n    \"movieId\": -48660535.1030005,\n    \"actorId\": 8563662.725198507\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Movieactor Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movie-actors/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "MovieActor model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movie-actors/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie-actors",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -94057324.18141924,\n \"movieId\": -79183185.71984187,\n \"actorId\": -28543473.291553527\n}"
								}
							]
						},
						{
							"name": "Movieactor Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Movieactor Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movieId\": 6588880.764553189,\n    \"actorId\": -35396355.149848044\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/movie-actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movie-actors"
							]
						}
					},
					"response": [
						{
							"name": "MovieActor model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"movieId\": 6588880.764553189,\n    \"actorId\": -35396355.149848044\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movie-actors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -63947463.24316704,\n \"movieId\": -61981571.33545714,\n \"actorId\": -51438926.427681245\n}"
						}
					]
				},
				{
					"name": "Movieactor Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 70294398.2718263,\n    \"movieId\": -48660535.1030005,\n    \"actorId\": 8563662.725198507\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/movie-actors?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movie-actors"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "MovieActor PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70294398.2718263,\n    \"movieId\": -48660535.1030005,\n    \"actorId\": 8563662.725198507\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movie-actors?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Movieactor Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movie-actors?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movie-actors"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of MovieActor model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movie-actors?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 64045639.69819698,\n  \"movieId\": -6984082.707735777,\n  \"actorId\": 15727656.617139548\n },\n {\n  \"id\": 55578523.80111399,\n  \"movieId\": 39386006.39875576,\n  \"actorId\": -62589110.07832801\n }\n]"
						}
					]
				},
				{
					"name": "Movieactor Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movie-actors/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movie-actors",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "MovieActor model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movie-actors/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movie-actors",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "movies",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "actors",
							"item": [
								{
									"name": "Movie Actor Controller.create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"ut consectetur in\",\n    \"birthdate\": \"1994-05-29T03:20:13.513Z\",\n    \"gender\": \"amet veniam Excepteur adipisicing\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movies/:id/actors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id",
												"actors"
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "create a Actor model instance",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"ut consectetur in\",\n    \"birthdate\": \"1994-05-29T03:20:13.513Z\",\n    \"gender\": \"amet veniam Excepteur adipisicing\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/movies/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movies",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"officia \",\n \"birthdate\": \"1980-11-08T09:49:32.624Z\",\n \"gender\": \"Lorem cillum Ut\",\n \"id\": 28227346.42048435\n}"
										}
									]
								},
								{
									"name": "Movie Actor Controller.patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movies/:id/actors?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Movie.Actor PATCH success count",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/movies/:id/actors?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movies",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								},
								{
									"name": "Movie Actor Controller.find",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movies/:id/actors?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Array of Movie has many Actor through MovieActor",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/movies/:id/actors?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movies",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"esse\",\n  \"birthdate\": \"1956-06-03T03:09:30.505Z\",\n  \"gender\": \"non sunt\",\n  \"id\": -7177276.100152329\n },\n {\n  \"name\": \"nulla proident\",\n  \"birthdate\": \"1972-02-25T01:37:50.552Z\",\n  \"gender\": \"elit incididunt sed\",\n  \"id\": 19106302.44926104\n }\n]"
										}
									]
								},
								{
									"name": "Movie Actor Controller.delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movies/:id/actors?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Movie.Actor DELETE success count",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/movies/:id/actors?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movies",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								}
							]
						},
						{
							"name": "Movie Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"irure voluptate dolor\",\n    \"release_date\": \"1991-08-10T23:42:13.524Z\",\n    \"rating\": -31992160.867454126,\n    \"genre\": \"ex proident veniam incididunt\",\n    \"id\": -79712153.28449705\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"irure voluptate dolor\",\n    \"release_date\": \"1991-08-10T23:42:13.524Z\",\n    \"rating\": -31992160.867454126,\n    \"genre\": \"ex proident veniam incididunt\",\n    \"id\": -79712153.28449705\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Movie Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Movie Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Movie model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movies/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ut sunt aliqua aliquip\",\n \"release_date\": \"2008-01-07T12:17:59.561Z\",\n \"rating\": 65860758.619903415,\n \"genre\": \"nisi in sunt irure qui\",\n \"id\": 28583254.297400758,\n \"actors\": [\n  {\n   \"name\": \"officia ipsum\",\n   \"birthdate\": \"1954-03-20T05:44:32.286Z\",\n   \"gender\": \"sunt esse est nisi\",\n   \"id\": -94827091.54830076,\n   \"movies\": [\n    {\n     \"name\": \"reprehenderit\",\n     \"release_date\": \"1944-01-10T15:13:59.255Z\",\n     \"rating\": -34793935.84413542,\n     \"genre\": \"ea aliquip deserunt ut reprehe\",\n     \"id\": -66544521.32789706,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"esse aliquip laborum in velit\",\n       \"description\": \"veniam tempor aute\",\n       \"creation_date\": \"1992-01-10T07:02:11.624Z\",\n       \"id\": 70590824.21237445,\n       \"userId\": -88051547.60657352,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"minim\",\n       \"description\": \"ad amet commodo reprehenderit\",\n       \"creation_date\": \"2019-01-18T23:59:18.936Z\",\n       \"id\": -23630618.41509366,\n       \"userId\": -85429755.29322301,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"dolor Ut\",\n     \"release_date\": \"2019-08-23T21:28:36.833Z\",\n     \"rating\": 83859531.78007245,\n     \"genre\": \"sunt cupidatat mollit\",\n     \"id\": -29239535.91036375,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"tempor consectetur quis\",\n       \"description\": \"consequat\",\n       \"creation_date\": \"2002-08-17T17:52:26.157Z\",\n       \"id\": 42162632.86347121,\n       \"userId\": 47684093.69506985,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"sint occaecat Ut\",\n       \"description\": \"eu ea in eiusmod\",\n       \"creation_date\": \"1991-09-07T10:10:20.474Z\",\n       \"id\": 28750428.95106703,\n       \"userId\": -86356593.48594502,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ],\n   \"series\": [\n    {\n     \"name\": \"tempor Ut aliqua sint occaecat\",\n     \"release_date\": \"1989-03-29T11:19:30.280Z\",\n     \"rating\": -34917329.120920025,\n     \"genre\": \"sint veniam\",\n     \"seasons\": 87225407.78228104,\n     \"id\": -64656277.72373664,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"elit nulla ut veniam occaecat\",\n       \"description\": \"occaecat veniam qui\",\n       \"creation_date\": \"1994-12-17T01:06:25.262Z\",\n       \"id\": 95801486.32389349,\n       \"userId\": -81583725.17899375,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"Duis\",\n       \"description\": \"aute ut sit voluptate qui\",\n       \"creation_date\": \"1955-11-26T14:44:35.361Z\",\n       \"id\": 38895955.63480243,\n       \"userId\": 62299840.886078775,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"aute dolore ipsum velit sint\",\n     \"release_date\": \"1991-10-12T07:16:49.132Z\",\n     \"rating\": -15608941.69759433,\n     \"genre\": \"est\",\n     \"seasons\": 32495674.417018965,\n     \"id\": 42655366.84684923,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"incididunt laborum aute proident\",\n       \"description\": \"Duis ipsum sunt consequat veniam\",\n       \"creation_date\": \"1961-12-23T16:52:15.524Z\",\n       \"id\": 24290642.88994068,\n       \"userId\": 88544140.62592185,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"consequat laborum ut\",\n       \"description\": \"dolore in\",\n       \"creation_date\": \"1943-06-05T14:42:35.029Z\",\n       \"id\": -38039907.60149376,\n       \"userId\": -95678236.58716072,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"adipisicing eu cupidatat a\",\n   \"birthdate\": \"1972-11-17T19:05:25.227Z\",\n   \"gender\": \"eiusmod in Excepteur aliquip in\",\n   \"id\": -86604806.570623,\n   \"movies\": [\n    {\n     \"name\": \"occaecat dolore commodo\",\n     \"release_date\": \"1977-02-28T11:48:38.763Z\",\n     \"rating\": -60301918.22498985,\n     \"genre\": \"est laboris veniam\",\n     \"id\": 45697691.70756093,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"non in\",\n       \"description\": \"et anim\",\n       \"creation_date\": \"2009-01-14T20:31:35.650Z\",\n       \"id\": 5497092.360726967,\n       \"userId\": 5445131.044604689,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"ex aliquip\",\n       \"description\": \"sint labore tempor\",\n       \"creation_date\": \"1980-06-28T10:09:52.621Z\",\n       \"id\": 88024537.876115,\n       \"userId\": -11103913.94015649,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"consequat\",\n     \"release_date\": \"1945-12-02T19:14:33.490Z\",\n     \"rating\": 6710682.490832284,\n     \"genre\": \"exercitation mollit\",\n     \"id\": -41809974.61704363,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"veniam reprehenderit\",\n       \"description\": \"laboris elit\",\n       \"creation_date\": \"1968-06-16T16:33:56.098Z\",\n       \"id\": -1377745.7811872065,\n       \"userId\": -76380149.8075984,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"aliquip ullamco dolor\",\n       \"description\": \"exercitation in sunt\",\n       \"creation_date\": \"1967-08-21T14:57:24.558Z\",\n       \"id\": -40335663.606071614,\n       \"userId\": 20714062.344880134,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ],\n   \"series\": [\n    {\n     \"name\": \"aliq\",\n     \"release_date\": \"2013-03-28T14:36:34.483Z\",\n     \"rating\": -60666298.00836303,\n     \"genre\": \"elit enim\",\n     \"seasons\": -85330763.30164695,\n     \"id\": -14199581.056159794,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"tempor in laborum adipisicing\",\n       \"description\": \"Lorem pariatur irure cupidatat\",\n       \"creation_date\": \"2019-06-02T08:48:49.799Z\",\n       \"id\": -1841142.2326139808,\n       \"userId\": 44300820.54249528,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"deserunt nostru\",\n       \"description\": \"sint anim\",\n       \"creation_date\": \"1954-03-12T03:01:55.258Z\",\n       \"id\": -57976264.15446047,\n       \"userId\": -91152334.97692743,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"minim et\",\n     \"release_date\": \"1994-10-11T23:45:17.093Z\",\n     \"rating\": -62534350.06930768,\n     \"genre\": \"ex magna commodo dolor dolore\",\n     \"seasons\": -39123847.438398495,\n     \"id\": 2413434.2723068744,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"culpa ipsum pariatur tempor\",\n       \"description\": \"\",\n       \"creation_date\": \"1968-12-18T22:48:15.541Z\",\n       \"id\": 2784268.314746812,\n       \"userId\": 41221825.9823415,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"adipisicing labore do nisi\",\n       \"description\": \"commodo officia\",\n       \"creation_date\": \"1986-04-25T11:18:38.506Z\",\n       \"id\": 98508884.1607197,\n       \"userId\": -28401579.833502576,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ]\n  }\n ],\n \"lists\": [\n  {\n   \"name\": \"mollit Excepteur\",\n   \"description\": \"magna non minim\",\n   \"creation_date\": \"1962-06-09T14:27:27.014Z\",\n   \"id\": 66661213.44004238,\n   \"userId\": -42304620.105625324,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"adi\",\n   \"description\": \"sunt in mollit adipisicing consequat\",\n   \"creation_date\": \"1999-12-31T12:14:28.924Z\",\n   \"id\": 35513561.737993896,\n   \"userId\": 56623834.075562835,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Movie Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Movie List Controller.find",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:id/lists?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":id",
										"lists"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Array of Movie has many List through ListMovie",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/movies/:id/lists?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movies",
												":id",
												"lists"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"in esse adipisicing veniam\",\n  \"description\": \"dolor tempor ullamco enim\",\n  \"creation_date\": \"1948-06-08T14:22:42.008Z\",\n  \"id\": -76690545.34912121,\n  \"userId\": -97863366.84670527\n },\n {\n  \"name\": \"ea adipisicing sed\",\n  \"description\": \"est eu enim anim\",\n  \"creation_date\": \"1998-07-01T11:02:49.578Z\",\n  \"id\": -80427292.65822387,\n  \"userId\": 57160752.52399951\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Movie Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ut commodo in Excepteur\",\n    \"release_date\": \"1994-06-25T23:49:20.214Z\",\n    \"rating\": -98624920.48549156,\n    \"genre\": \"dolore sit exercitation dolor quis\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": [
						{
							"name": "Movie model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Ut commodo in Excepteur\",\n    \"release_date\": \"1994-06-25T23:49:20.214Z\",\n    \"rating\": -98624920.48549156,\n    \"genre\": \"dolore sit exercitation dolor quis\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"irure voluptate dolor\",\n \"release_date\": \"1991-08-10T23:42:13.524Z\",\n \"rating\": -31992160.867454126,\n \"genre\": \"ex proident veniam incididunt\",\n \"id\": -79712153.28449705\n}"
						}
					]
				},
				{
					"name": "Movie Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/movies?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Movie PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -36431320.45591946,\n    \"name\": \"u\",\n    \"release_date\": \"1973-06-11T13:44:09.572Z\",\n    \"rating\": -81218681.78783429,\n    \"genre\": \"ad cillum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/movies?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Movie Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of Movie model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"mollit id cillum\",\n  \"release_date\": \"1978-07-08T10:19:14.537Z\",\n  \"rating\": 11734753.242158785,\n  \"genre\": \"dolore ipsum\",\n  \"id\": 56230231.53828254,\n  \"actors\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   }\n  ],\n  \"lists\": [\n   {\n    \"name\": \"Ut non incididunt\",\n    \"description\": \"commodo cupidatat\",\n    \"creation_date\": \"1995-12-05T07:18:25.685Z\",\n    \"id\": 72688853.9909364,\n    \"userId\": 65759813.11984998,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"et do quis magna dolore\",\n    \"description\": \"pariatur in labore\",\n    \"creation_date\": \"1985-12-19T23:04:51.850Z\",\n    \"id\": 52939957.26587877,\n    \"userId\": -22512987.816839308,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"name\": \"mollit proident in\",\n  \"release_date\": \"1942-07-22T23:27:52.610Z\",\n  \"rating\": -66266021.60769805,\n  \"genre\": \"officia aliquip cillum sed\",\n  \"id\": -59349245.48624534,\n  \"actors\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   }\n  ],\n  \"lists\": [\n   {\n    \"name\": \"eu deserunt\",\n    \"description\": \"culpa Ut\",\n    \"creation_date\": \"1996-08-18T03:11:33.080Z\",\n    \"id\": -11515766.827774063,\n    \"userId\": 88912149.44326586,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"commodo\",\n    \"description\": \"id occaecat aliqua ad laboris\",\n    \"creation_date\": \"2001-05-17T00:21:28.798Z\",\n    \"id\": 59907198.60539597,\n    \"userId\": 57226127.12192124,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Movie Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Movie model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "serie-actors",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Serieactor Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -63076625.12560151,\n    \"serieId\": 74443691.44314936,\n    \"actorId\": 70302564.58626178\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/serie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -63076625.12560151,\n    \"serieId\": 74443691.44314936,\n    \"actorId\": 70302564.58626178\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/serie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Serieactor Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -28211268.60288903,\n    \"serieId\": -81023163.81226657,\n    \"actorId\": -91379356.4347153\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/serie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -28211268.60288903,\n    \"serieId\": -81023163.81226657,\n    \"actorId\": -91379356.4347153\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/serie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Serieactor Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/serie-actors/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "SerieActor model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serie-actors/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serie-actors",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -519073.5817581266,\n \"serieId\": -54827530.73406328,\n \"actorId\": 61955134.736445636\n}"
								}
							]
						},
						{
							"name": "Serieactor Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/serie-actors/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serie-actors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serie-actors",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Serieactor Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"serieId\": -98516890.420767,\n    \"actorId\": 6258902.720596686\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/serie-actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"serie-actors"
							]
						}
					},
					"response": [
						{
							"name": "SerieActor model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serieId\": -98516890.420767,\n    \"actorId\": 6258902.720596686\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/serie-actors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -63076625.12560151,\n \"serieId\": 74443691.44314936,\n \"actorId\": 70302564.58626178\n}"
						}
					]
				},
				{
					"name": "Serieactor Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -28211268.60288903,\n    \"serieId\": -81023163.81226657,\n    \"actorId\": -91379356.4347153\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/serie-actors?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"serie-actors"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "SerieActor PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -28211268.60288903,\n    \"serieId\": -81023163.81226657,\n    \"actorId\": -91379356.4347153\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/serie-actors?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Serieactor Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/serie-actors?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"serie-actors"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of SerieActor model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/serie-actors?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -2731686.467459187,\n  \"serieId\": -26062415.381601498,\n  \"actorId\": 30915028.213396087\n },\n {\n  \"id\": 15652649.357200593,\n  \"serieId\": -82409442.0847952,\n  \"actorId\": -15121724.480221406\n }\n]"
						}
					]
				},
				{
					"name": "Serieactor Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/serie-actors/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"serie-actors",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "SerieActor model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/serie-actors/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"serie-actors",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "series",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "actors",
							"item": [
								{
									"name": "Serie Actor Controller.create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"ut\",\n    \"birthdate\": \"1958-01-10T06:15:42.561Z\",\n    \"gender\": \"mag\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/series/:id/actors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id",
												"actors"
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "create a Actor model instance",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"ut\",\n    \"birthdate\": \"1958-01-10T06:15:42.561Z\",\n    \"gender\": \"mag\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/series/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"series",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"officia \",\n \"birthdate\": \"1980-11-08T09:49:32.624Z\",\n \"gender\": \"Lorem cillum Ut\",\n \"id\": 28227346.42048435\n}"
										}
									]
								},
								{
									"name": "Serie Actor Controller.patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/series/:id/actors?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Serie.Actor PATCH success count",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 54082005.77232587,\n    \"name\": \"adipisicing in consectetur occaecat ipsum\",\n    \"birthdate\": \"2016-04-20T04:06:39.875Z\",\n    \"gender\": \"q\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/series/:id/actors?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"series",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								},
								{
									"name": "Serie Actor Controller.find",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/series/:id/actors?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Array of Serie has many Actor through SerieActor",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/series/:id/actors?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"series",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"esse\",\n  \"birthdate\": \"1956-06-03T03:09:30.505Z\",\n  \"gender\": \"non sunt\",\n  \"id\": -7177276.100152329\n },\n {\n  \"name\": \"nulla proident\",\n  \"birthdate\": \"1972-02-25T01:37:50.552Z\",\n  \"gender\": \"elit incididunt sed\",\n  \"id\": 19106302.44926104\n }\n]"
										}
									]
								},
								{
									"name": "Serie Actor Controller.delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/series/:id/actors?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Serie.Actor DELETE success count",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/series/:id/actors?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"series",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								}
							]
						},
						{
							"name": "Serie Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"qui consequat\",\n    \"release_date\": \"1973-05-21T09:43:21.321Z\",\n    \"rating\": -26984993.09491518,\n    \"genre\": \"eu commodo pariatur v\",\n    \"seasons\": -51470973.28240604,\n    \"id\": 69273116.26098031\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"qui consequat\",\n    \"release_date\": \"1973-05-21T09:43:21.321Z\",\n    \"rating\": -26984993.09491518,\n    \"genre\": \"eu commodo pariatur v\",\n    \"seasons\": -51470973.28240604,\n    \"id\": 69273116.26098031\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Serie Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Serie Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/series/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Serie model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/series/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"sunt deserunt\",\n \"release_date\": \"1952-02-20T23:44:48.296Z\",\n \"rating\": 11140013.938998237,\n \"genre\": \"sed laborum fugiat enim\",\n \"seasons\": -42298287.297721915,\n \"id\": 42441136.4045099,\n \"actors\": [\n  {\n   \"name\": \"dolore minim\",\n   \"birthdate\": \"2020-08-04T08:12:26.980Z\",\n   \"gender\": \"al\",\n   \"id\": -77181643.08224593,\n   \"movies\": [\n    {\n     \"name\": \"incididunt occaecat labore ut cillum\",\n     \"release_date\": \"1983-01-20T07:38:21.100Z\",\n     \"rating\": 74588850.937516,\n     \"genre\": \"est\",\n     \"id\": 17864329.827661768,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"cillum sed\",\n       \"description\": \"sed ut amet\",\n       \"creation_date\": \"1979-11-09T05:51:27.313Z\",\n       \"id\": 46505556.86440194,\n       \"userId\": -7058150.282474026,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"dolor qui dolor veniam\",\n       \"description\": \"ullamco nisi sit proident\",\n       \"creation_date\": \"1976-06-24T11:23:57.934Z\",\n       \"id\": -57171606.345376655,\n       \"userId\": -77389201.6353826,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"aliqua irure ullamco\",\n     \"release_date\": \"1952-09-09T06:36:19.498Z\",\n     \"rating\": -17400198.117194816,\n     \"genre\": \"laboris\",\n     \"id\": -4519424.967356622,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"mollit in do esse consequat\",\n       \"description\": \"consequat dolore\",\n       \"creation_date\": \"2020-06-22T15:43:57.805Z\",\n       \"id\": 10035869.833526373,\n       \"userId\": 95719585.89461431,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"officia ad exercitation consequat\",\n       \"description\": \"aute minim non officia ea\",\n       \"creation_date\": \"1946-09-09T13:04:40.709Z\",\n       \"id\": 70079519.92557952,\n       \"userId\": -26379865.25219658,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ],\n   \"series\": [\n    {\n     \"name\": \"d\",\n     \"release_date\": \"1991-04-19T11:23:51.785Z\",\n     \"rating\": -18885120.868377656,\n     \"genre\": \"sed tempor\",\n     \"seasons\": -2371402.3563761115,\n     \"id\": -38877162.875708126,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"consequat laboris\",\n       \"description\": \"magna enim\",\n       \"creation_date\": \"2007-07-25T06:22:01.351Z\",\n       \"id\": 18300253.880062163,\n       \"userId\": 19673951.597579136,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"Ut labo\",\n       \"description\": \"qu\",\n       \"creation_date\": \"1951-03-04T18:07:06.161Z\",\n       \"id\": 91208954.90899786,\n       \"userId\": -41025919.59531168,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"magna eu qui\",\n     \"release_date\": \"1944-05-21T10:27:32.031Z\",\n     \"rating\": 51913696.41414076,\n     \"genre\": \"commodo consequat dol\",\n     \"seasons\": 87132389.89616609,\n     \"id\": 45653655.01253265,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"ex ipsum\",\n       \"description\": \"sint tempor dolor\",\n       \"creation_date\": \"1970-10-16T10:18:26.953Z\",\n       \"id\": -34025848.849308014,\n       \"userId\": -45940970.74712886,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"in ut\",\n       \"description\": \"dolore non\",\n       \"creation_date\": \"2004-11-21T20:19:46.686Z\",\n       \"id\": -74820069.57751612,\n       \"userId\": 72259657.37435022,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"aliquip irure ad\",\n   \"birthdate\": \"1978-11-01T15:40:20.250Z\",\n   \"gender\": \"proident in dolor Lorem\",\n   \"id\": 17541407.75814119,\n   \"movies\": [\n    {\n     \"name\": \"dolore irure velit ut\",\n     \"release_date\": \"2011-07-22T13:57:12.439Z\",\n     \"rating\": 80560169.88625604,\n     \"genre\": \"voluptate\",\n     \"id\": -71945356.35552897,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"laboris aute Duis elit dolore\",\n       \"description\": \"tempor\",\n       \"creation_date\": \"2011-07-16T03:21:25.196Z\",\n       \"id\": 20763751.27490224,\n       \"userId\": 72347479.02537423,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"quis in veniam\",\n       \"description\": \"ea aliqua magna\",\n       \"creation_date\": \"2020-01-16T11:56:13.638Z\",\n       \"id\": -93274159.08021241,\n       \"userId\": -77587278.26886718,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"officia velit minim\",\n     \"release_date\": \"2013-03-29T17:30:21.757Z\",\n     \"rating\": 46199511.25844777,\n     \"genre\": \"nulla id in ex incididunt\",\n     \"id\": 18988860.36765024,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"esse elit\",\n       \"description\": \"ad et dolor aliquip\",\n       \"creation_date\": \"1972-07-05T15:45:47.926Z\",\n       \"id\": 6941280.879138306,\n       \"userId\": -96454894.1398652,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"sit dolore\",\n       \"description\": \"dolore\",\n       \"creation_date\": \"1989-02-14T07:57:07.201Z\",\n       \"id\": -63700955.61557587,\n       \"userId\": 25588117.297710553,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ],\n   \"series\": [\n    {\n     \"name\": \"nulla amet\",\n     \"release_date\": \"1960-02-24T07:32:14.730Z\",\n     \"rating\": 75199391.91259843,\n     \"genre\": \"elit minim\",\n     \"seasons\": -80579019.46422735,\n     \"id\": -41913945.36070696,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"consequat sit\",\n       \"description\": \"aliqua ea\",\n       \"creation_date\": \"1995-04-18T08:57:44.274Z\",\n       \"id\": 84928658.11943245,\n       \"userId\": -53802976.51278898,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"exercitation ipsum voluptate\",\n       \"description\": \"ut tempor reprehenderit est\",\n       \"creation_date\": \"2004-09-18T05:33:17.267Z\",\n       \"id\": -27333315.512306556,\n       \"userId\": 463207.75075115263,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    },\n    {\n     \"name\": \"laboris adipisicing\",\n     \"release_date\": \"2001-05-26T16:30:50.487Z\",\n     \"rating\": -78615680.81801838,\n     \"genre\": \"laboris tempor cupidatat\",\n     \"seasons\": 8552866.40701966,\n     \"id\": -88560356.61706318,\n     \"actors\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n      }\n     ],\n     \"lists\": [\n      {\n       \"name\": \"magna aliquip cillum sunt dolore\",\n       \"description\": \"eu dolore ex nulla\",\n       \"creation_date\": \"1955-03-26T11:05:29.147Z\",\n       \"id\": 84105588.66978896,\n       \"userId\": 93661857.1288057,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      },\n      {\n       \"name\": \"in minim reprehender\",\n       \"description\": \"aliquip consequat tempor\",\n       \"creation_date\": \"1967-04-24T23:53:06.810Z\",\n       \"id\": -74655109.8774213,\n       \"userId\": -20407291.84869674,\n       \"movies\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"series\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ]\n      }\n     ]\n    }\n   ]\n  }\n ],\n \"lists\": [\n  {\n   \"name\": \"qui aliqua amet eiusmod\",\n   \"description\": \"Duis dolore officia irure\",\n   \"creation_date\": \"1954-05-09T12:41:38.966Z\",\n   \"id\": 41431802.42622763,\n   \"userId\": -3307534.882972181,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"veniam aliquip\",\n   \"description\": \"veniam officia commodo sit\",\n   \"creation_date\": \"2004-11-12T06:24:42.665Z\",\n   \"id\": -53231857.12381311,\n   \"userId\": 71665728.85972968,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Serie Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/series/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/series/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Serie List Controller.find",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/series/:id/lists?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										":id",
										"lists"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Array of Serie has many List through ListSerie",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/series/:id/lists?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"series",
												":id",
												"lists"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"in esse adipisicing veniam\",\n  \"description\": \"dolor tempor ullamco enim\",\n  \"creation_date\": \"1948-06-08T14:22:42.008Z\",\n  \"id\": -76690545.34912121,\n  \"userId\": -97863366.84670527\n },\n {\n  \"name\": \"ea adipisicing sed\",\n  \"description\": \"est eu enim anim\",\n  \"creation_date\": \"1998-07-01T11:02:49.578Z\",\n  \"id\": -80427292.65822387,\n  \"userId\": 57160752.52399951\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Serie Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"et\",\n    \"release_date\": \"1966-10-25T05:40:38.177Z\",\n    \"rating\": 69148962.53203112,\n    \"genre\": \"exercitation irure cupid\",\n    \"seasons\": 95917715.62744665\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series"
							]
						}
					},
					"response": [
						{
							"name": "Serie model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"et\",\n    \"release_date\": \"1966-10-25T05:40:38.177Z\",\n    \"rating\": 69148962.53203112,\n    \"genre\": \"exercitation irure cupid\",\n    \"seasons\": 95917715.62744665\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"qui consequat\",\n \"release_date\": \"1973-05-21T09:43:21.321Z\",\n \"rating\": -26984993.09491518,\n \"genre\": \"eu commodo pariatur v\",\n \"seasons\": -51470973.28240604,\n \"id\": 69273116.26098031\n}"
						}
					]
				},
				{
					"name": "Serie Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/series?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Serie PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -62626523.60005841,\n    \"name\": \"mollit adipisicing dolor commodo\",\n    \"release_date\": \"2007-12-04T07:00:12.388Z\",\n    \"rating\": 30479252.92777589,\n    \"genre\": \"nostrud irure\",\n    \"seasons\": -43283343.80704471\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/series?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "Serie Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of Serie model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/series?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"consequat aute in pariatur\",\n  \"release_date\": \"1987-04-09T02:47:01.728Z\",\n  \"rating\": 56245599.42777681,\n  \"genre\": \"ad exercitation qui\",\n  \"seasons\": 14455691.600033924,\n  \"id\": 97848115.87139791,\n  \"actors\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   }\n  ],\n  \"lists\": [\n   {\n    \"name\": \"deserunt velit commodo\",\n    \"description\": \"elit minim\",\n    \"creation_date\": \"2019-01-09T11:14:31.469Z\",\n    \"id\": -79871229.98915268,\n    \"userId\": 49910943.28050107,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"Ut nisi \",\n    \"description\": \"Lorem in\",\n    \"creation_date\": \"2015-10-08T00:13:12.711Z\",\n    \"id\": -4292881.95256041,\n    \"userId\": -4303301.838201717,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"name\": \"amet et anim aliqua\",\n  \"release_date\": \"2016-01-17T14:27:40.029Z\",\n  \"rating\": 75043680.88856074,\n  \"genre\": \"exercitation cupidatat consectetur amet\",\n  \"seasons\": 64677676.15339512,\n  \"id\": 96787602.25177476,\n  \"actors\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/ActorWithRelations detected>\"\n   }\n  ],\n  \"lists\": [\n   {\n    \"name\": \"commodo ea dolor sint\",\n    \"description\": \"aliqua veniam labore amet\",\n    \"creation_date\": \"1985-09-26T08:58:47.709Z\",\n    \"id\": 79568678.72991276,\n    \"userId\": 77279142.2021335,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"minim \",\n    \"description\": \"incididunt non velit\",\n    \"creation_date\": \"1945-11-19T21:27:13.111Z\",\n    \"id\": 79509377.7545763,\n    \"userId\": -88389077.28263807,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Serie Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Serie model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/series/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"series",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "lists",
							"item": [
								{
									"name": "User List Controller.create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"esse consequat non\",\n    \"description\": \"sunt minim\",\n    \"creation_date\": \"1949-01-30T09:58:37.537Z\",\n    \"userId\": -82140867.29763186\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"lists"
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "User model instance",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"esse consequat non\",\n    \"description\": \"sunt minim\",\n    \"creation_date\": \"1949-01-30T09:58:37.537Z\",\n    \"userId\": -82140867.29763186\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:id/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":id",
														"lists"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"cupidatat pariatur\",\n \"description\": \"eu\",\n \"creation_date\": \"1950-10-19T10:00:54.755Z\",\n \"id\": -72781449.45384897,\n \"userId\": -38758558.62214981\n}"
										}
									]
								},
								{
									"name": "User List Controller.patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id/lists?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"lists"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "User.List PATCH success count",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": -19867546.19503519,\n    \"name\": \"in\",\n    \"description\": \"dolor nulla qui nisi\",\n    \"creation_date\": \"1963-03-18T09:35:03.217Z\",\n    \"userId\": 74018737.58324161\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:id/lists?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":id",
														"lists"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								},
								{
									"name": "User List Controller.find",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/lists?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"lists"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Array of User has many List",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:id/lists?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":id",
														"lists"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"in esse adipisicing veniam\",\n  \"description\": \"dolor tempor ullamco enim\",\n  \"creation_date\": \"1948-06-08T14:22:42.008Z\",\n  \"id\": -76690545.34912121,\n  \"userId\": -97863366.84670527\n },\n {\n  \"name\": \"ea adipisicing sed\",\n  \"description\": \"est eu enim anim\",\n  \"creation_date\": \"1998-07-01T11:02:49.578Z\",\n  \"id\": -80427292.65822387,\n  \"userId\": 57160752.52399951\n }\n]"
										}
									]
								},
								{
									"name": "User List Controller.delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/lists?where=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"lists"
											],
											"query": [
												{
													"key": "where",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "45381166.436522245",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "User.List DELETE success count",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:id/lists?where=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":id",
														"lists"
													],
													"query": [
														{
															"key": "where",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": -55510568.08977641\n}"
										}
									]
								}
							]
						},
						{
							"name": "User Controller.replace By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"Lorem sunt eiusmod\",\n    \"email\": \"amet\",\n    \"verified\": true,\n    \"password\": \"d\",\n    \"id\": -37808299.13176169\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"Lorem sunt eiusmod\",\n    \"email\": \"amet\",\n    \"verified\": true,\n    \"password\": \"d\",\n    \"id\": -37808299.13176169\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "User Controller.update By Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -28309137.06249541,\n    \"username\": \"amet officia sunt sit\",\n    \"email\": \"Ut nulla\",\n    \"verified\": false,\n    \"password\": \"do pariatur ad quis\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": -28309137.06249541,\n    \"username\": \"amet officia sunt sit\",\n    \"email\": \"Ut nulla\",\n    \"verified\": false,\n    \"password\": \"do pariatur ad quis\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "User Controller.find By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "User model instance",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"Excepteur\",\n \"email\": \"nostrud fugiat dolore labore\",\n \"verified\": true,\n \"password\": \"qui anim dolore cillum ut\",\n \"id\": -33744012.054993846,\n \"lists\": [\n  {\n   \"name\": \"voluptate tempor laborum\",\n   \"description\": \"Duis\",\n   \"creation_date\": \"2006-06-21T11:44:15.786Z\",\n   \"id\": -14257939.406111524,\n   \"userId\": -46275643.281001024,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"officia velit\",\n   \"description\": \"labore non adipisicing magna incididunt\",\n   \"creation_date\": \"1983-12-12T00:21:48.030Z\",\n   \"id\": -66953150.36733343,\n   \"userId\": 2402990.3076045066,\n   \"movies\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"series\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "User Controller.delete By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "45381166.436522245",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "User Controller.create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"elit dolore do culpa laboris\",\n    \"email\": \"ullamco\",\n    \"verified\": false,\n    \"password\": \"deserunt nulla culpa nisi\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "User model instance",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"elit dolore do culpa laboris\",\n    \"email\": \"ullamco\",\n    \"verified\": false,\n    \"password\": \"deserunt nulla culpa nisi\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"username\": \"Lorem sunt eiusmod\",\n \"email\": \"amet\",\n \"verified\": true,\n \"password\": \"d\",\n \"id\": -37808299.13176169\n}"
						}
					]
				},
				{
					"name": "User Controller.update All",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -28309137.06249541,\n    \"username\": \"amet officia sunt sit\",\n    \"email\": \"Ut nulla\",\n    \"verified\": false,\n    \"password\": \"do pariatur ad quis\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "User PATCH success count",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -28309137.06249541,\n    \"username\": \"amet officia sunt sit\",\n    \"email\": \"Ut nulla\",\n    \"verified\": false,\n    \"password\": \"do pariatur ad quis\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				},
				{
					"name": "User Controller.find",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?filter=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Array of User model instances",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"username\": \"in irure\",\n  \"email\": \"ex ipsum ut dolore\",\n  \"verified\": true,\n  \"password\": \"ex adipisicing fugiat ut\",\n  \"id\": -34531911.03625142,\n  \"lists\": [\n   {\n    \"name\": \"Lorem laborum magna exercitation\",\n    \"description\": \"magna ut quis dolore\",\n    \"creation_date\": \"1951-07-05T04:07:18.229Z\",\n    \"id\": -86251415.16106173,\n    \"userId\": -49522051.424578615,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"ex nulla proident\",\n    \"description\": \"consectetur Lorem cillum cupidatat\",\n    \"creation_date\": \"2004-06-15T06:53:15.260Z\",\n    \"id\": -72233894.29417741,\n    \"userId\": 20623402.289585352,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"username\": \"\",\n  \"email\": \"nulla incididunt dolor exercitation est\",\n  \"verified\": true,\n  \"password\": \"fugiat\",\n  \"id\": 90107065.07573545,\n  \"lists\": [\n   {\n    \"name\": \"nostrud amet\",\n    \"description\": \"elit quis Ut\",\n    \"creation_date\": \"2013-06-25T05:17:53.821Z\",\n    \"id\": 78865954.94712126,\n    \"userId\": 54431577.345493525,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"name\": \"cupidatat anim cillum\",\n    \"description\": \"occaecat aute\",\n    \"creation_date\": \"1962-07-27T14:04:53.625Z\",\n    \"id\": -49786100.99819969,\n    \"userId\": -41793532.527603805,\n    \"movies\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"series\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "User Controller.count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/count?where=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"count"
							],
							"query": [
								{
									"key": "where",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "User model count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/count?where=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"count"
									],
									"query": [
										{
											"key": "where",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": -55510568.08977641\n}"
						}
					]
				}
			]
		},
		{
			"name": "Ping Controller.ping",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": [
				{
					"name": "Ping Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"greeting\": \"ullamco in\",\n \"date\": \"laboris mollit aliquip velit ad\",\n \"url\": \"ut commodo sit exercitation\",\n \"headers\": {\n  \"Content-Type\": \"est consequat non ea\"\n }\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://[::1]:3000",
			"type": "string"
		}
	]
}